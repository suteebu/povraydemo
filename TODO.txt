- pre-existing for demo:
  - SQS queue
  - S3 bucket
  - self-refreshing html file that links to images of movie
- Master ruby script to
  - generate path for camera
  - generate .pov files with that camera setting and a comment at top of file IDing the file
  - send pov files to SQS queue
  - submit 50 Spot Requests to prosecute SQS queue (t1.micro?)
  - wait for all slave ruby scripts to complete the SQS queue
  - when SQS queue empty, compile movie!
  - upload to s3
- Slave ruby script
  - run when the instance is started (must be in startup script of AMI?)
  - loop
    - checks SQS queue for POV file (receives)
      - if not SQS items left, self-terminates
    - when it has the POV file, it updates a thumbnail on S3 to show it's working on it (green)
    - it should take < 2 min to finish the file or else SQS times out and considers item failed
      - confirm how long t1.micro takes to run
    - uploads s3 file and thumbnail



Notes
- processing time for: povray -w800 -h600 -a juliaisle.pov
  - m1.xlarge takes
